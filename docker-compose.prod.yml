version: '3.8'

services:
  backend:
    build: 
      context: ./yess-backend
      dockerfile: Dockerfile.prod
    container_name: yess-backend-prod
    restart: always
    environment:
      - ENV=production
      - DATABASE_URL=postgresql://yess_user:secure_password@postgres/yess_db
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./yess-backend:/app
      - ./uploads:/app/uploads

  postgres:
    image: postgres:13
    container_name: yess-postgres-prod
    restart: always
    environment:
      - POSTGRES_DB=yess_db
      - POSTGRES_USER=yess_user
      - POSTGRES_PASSWORD=secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    container_name: yess-redis-prod
    restart: always
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    container_name: yess-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  prometheus:
    image: prom/prometheus
    container_name: yess-prometheus-prod
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: yess-grafana-prod
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  postgres_data:
  uploads:
  certbot-etc:
  certbot-var:
