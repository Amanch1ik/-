name: Yess Loyalty CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r yess-backend/requirements-dev.txt
    
    - name: Run linters
      run: |
        flake8 yess-backend
        black --check yess-backend
        mypy yess-backend
    
    - name: Run tests
      run: |
        pytest yess-backend/tests/

  frontend-tests:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore YessLoyaltyApp/YessLoyaltyApp.sln
    
    - name: Build
      run: dotnet build YessLoyaltyApp/YessLoyaltyApp.sln --no-restore
    
    - name: Test
      run: dotnet test YessLoyaltyApp/YessLoyaltyApp.sln --no-build --verbosity normal

  docker-build:
    needs: [backend-tests, frontend-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Backend Docker Image
      run: |
        docker build -t yess-loyalty-backend:${{ github.sha }} yess-backend
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push Backend Image
      run: |
        docker tag yess-loyalty-backend:${{ github.sha }} ghcr.io/${{ github.repository }}/backend:${{ github.sha }}
        docker push ghcr.io/${{ github.repository }}/backend:${{ github.sha }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif
